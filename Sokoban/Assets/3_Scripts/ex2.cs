using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class ex2 : MonoBehaviour {
    
    // 2차원 배열
    char[, ] land2 = new char[14, 14] {
        {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
        {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
        {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
        {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
        {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
        {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
        {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
        {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
        {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
        {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
        {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
        {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
        {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
        {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'}
    };

    // // 가변 배열
    // char[][] land = new char[14][] {
    //     new char[14] {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
    //     new char[14] {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
    //     new char[14] {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
    //     new char[14] {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
    //     new char[14] {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
    //     new char[14] {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
    //     new char[14] {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
    //     new char[14] {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
    //     new char[14] {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
    //     new char[14] {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
    //     new char[14] {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
    //     new char[14] {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
    //     new char[14] {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
    //     new char[14] {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'}
    // };
    
    public Transform landTr;
    public GameObject treePrefab;

    Color color;

    void Start() {
        for (int i=0; i<land2.GetLength(0); i++) {
            for (int j=0; j<land2.GetLength(1); j++) {
                
                switch (RandomIntNum(0, 2)) {
                    case 0 :
                        land2[i, j] = 'T';
                        break;
                    default :
                        break;
                }

                if (land2[i, j] == 'T') {
                    GameObject treeObj = Instantiate(treePrefab, landTr);
                    treeObj.transform.localScale = new Vector3(RandomIntNum(3, 20) * 0.1f, 1f, RandomIntNum(3, 10) * 0.1f);
                    // treeObj.GetComponent<TreeRenderer>().leafRenderer.material.color = (0f, 0f, 0f);

                    Vector3 newPos = new Vector3(j / 1.4f, 0.5f, -i / 1.4f);
                    Vector3 correction = new Vector3(land2.GetLength(0) * 0.5f, 0f, -(land2.GetLength(1) * 0.5f));
                    treeObj.transform.localPosition = newPos - correction - new Vector3(-2.5f, 0f, 2.5f);
                }
            }
        }
    }

    int RandomIntNum(int minNum, int maxNum) {
        return Random.Range(minNum, maxNum +1);
    }
}
